O que é Programação e qual a sua importância para o futuro digital? Com o avanço das tecnologias digitais, a palavra programação chega as rodas de conversa com um significado que já é antigo, mas que vem sendo discutido cada vez mais nos dias atuais. A palavra não se trata mais apenas do planejamento que você faz para as férias ou do rumo que dá ao dinheiro que sobra no final do mês, mas vai muito, muito além disso. A programação que estamos falando aqui faz referência direta ao smartfone, tablet, notebook, ou qualquer outro aparelho eletrônico que você esteja utilizando neste exato momento para ler este texto. Isso porque, sem a programação com o seu sentido atual, você não conseguiria se comunicar facilmente com nenhuma dessas tecnologias. Então, você já deve ter percebido que a programação tem um sentido bastante complexo quando ligada ao mundo tecnológico. Mas não se preocupe, pois neste texto te explicaremos exatamente o que é a programação, para que ela serve e como ela tem se tornado cada vez mais fundamental para o avanço das tecnologias digitais. O Conceito de Programação. De forma geral, a programação é um processo de escrita, testes e manutenção de programas de computadores. Esses programas, por sua vez, são compostos por conjuntos de instruções determinados pelo programador que descrevem tarefas a serem realizadas pela máquina e atendem diversas finalidades. O advento da programação está diretamente ligado à história dos computadores. A primeira programadora foi uma mulher chamada Ada Lovelace, que escreveu um código para possibilitar a utilização da máquina analítica de Charles Babbage, uma máquina robusta, de difícil comunicação, considerada a precursora dos computadores eletrônicos atuais. Programação e computação: Imagem da Máquina analítica de Charles Babbage, maquina de cálculo metálica.  Máquina Diferencial, ou Máquina Analítica – criada por Charles Babbage (1791 – 1871). Um século depois, os computadores ficaram cada vez mais fáceis de serem utilizados e a programação ganha cada vez mais espaço na criação dessas tecnologias. Mas, para compreender de verdade do que ela se trata, é importante conhecer dois elementos fundamentais que compõem todos os computadores modernos, que são o hardware e o software. Hardwares, softwares e programação. Um computador é formado por componentes físicos, como a parte externa do seu celular, a CPU de um PC, a memória, o mouse, enfim… os meios pelos quais os sinais elétricos podem ser convertidos em dados, informações. Esses componentes são chamados de hardware e a sua linguagem binária, que é a linguagem de máquina, é composta apenas por bits, que são zeros e uns. Os bits representam a ausência ou presença de sinais elétricos. Agora, imagina utilizar o seu celular tendo que interpretar informações binárias: se tudo o que você visse na tela fosse uma sequência infinita de zeros e uns, os celulares não seriam nada práticos, não é mesmo? É por causa disso que existem os softwares. O software é o meio pelo qual a linguagem de máquina pode ser compilada ou interpretada, através de códigos criados em uma linguagem intermediária, para idiomas que conhecemos, como o português, o inglês e também para imagens, cores, números… enfim, uma série de dados que podem ser assimilados mais facilmente pelos seres humanos. Alguns exemplos de softwares são os programas de computadores, como o Word, Excel e Paint, e as aplicações para celulares, como a Playstore, App Store ou o Uber. Os sistemas operacionais, como o Android, Windows, Linux ou o Mac, também podem ser vistos, de forma simplificada, como softwares gigantes que comportam outros softwares. Mas, afinal, qual é a relação entre hardware, software e programação? A programação é exatamente quem possibilita a existência dos softwares e, por consequência, a utilização mais prática dos hardwares. Para poder dar origem aos softwares, a programação ganha uma linguagem própria que compõe códigos escritos por programadores. Linguagem de Programação. Essa linguagem nada mais é do que um método padronizado que permite comunicar instruções específicas para um computador. Há centenas de variações e todas elas permitem que o programador defina sobre quais dados o computador deverá atuar, como armazenar e transmitir esses dados e quais ações tomar sob variadas circunstâncias. Há dois tipos de linguagem para o programador: as compiladas e as interpretadas. Você compreenderá melhor cada uma delas no tópico “Código fonte” mais abaixo. Código Fonte Código fonte é o conjunto de palavras e comandos escritos ordenadamente, de maneira lógica, que contém instruções em determinada linguagem de programação. Como dissemos, há dois tipos de linguagem na hora de programar: as compiladas e as interpretadas. Compilar uma linguagem de programação nada mais é do que transformar o código fonte em algo que faça sentido para a máquina, ou seja, transformar o que o programador escreveu em linguagem de máquina. Já no processo de interpretação, o código fonte é transformado em uma linguagem intermediária que, por sua vez, será interpretada pela máquina virtual durante a execução do programa. Habilidades de um programador Agora que você já entendeu o que é a programação, como se define a sua linguagem e o significado de código fonte, é importante também saber que muito além de um simples processo de escrita, a programação envolve um misto de outras habilidades cognitivas, como o raciocínio lógico, habilidades matemáticas, a capacidade de abstração e de lidar com diferentes tipos de dados. Quando começa-se a estudar programação, a primeira coisa que se aprende é a criar algoritmos básicos, que são como receitas, para que a partir de um passo a passo, uma tarefa possa ser executada. E esse algoritmo é desenvolvido a partir de tentativas e erros baseados no resultado em que se quer chegar e em como se pode alcançá-lo. Um exemplo disso é quando pede para uma pessoa ir a tal padaria, você vai precisar saber onde ela se localiza para passar as instruções adequadas, como: ande reto até a rua tal (e você precisará saber o nome da rua) vire a direita (e você precisará ter noções de direção) e assim por diante. Com isso, você estará usando a lógica básica para criar um mapa de instruções, assim como os programadores começam a exercitar a lógica para chegar a softwares de computadores, tendo em vista que eles estão instruindo a máquina a chegar a um resultado. Seguindo no exemplo acima, para chegar a caminhos mais complexos, como construir um prédio, ou criar um software para engenheiros, é preciso passar por esse caminho do básico e ir somando a ele conhecimentos mais complexos, como conhecimentos matemáticos e da própria engenharia, por exemplo. Por esse motivo é importante dedicar tempo ao aprendizado da programação, e quanto mais cedo uma pessoa começa a se dedicar a programação, mais cedo também ela alcança resultados mais complexos, se tornando um programador cognitivamente capacitado para criar estratégias e soluções tecnológicas muito úteis a nossa sociedade, como softwares médicos, de engenharia, entre outros.